@model AnswerPoortal.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<h2>@ViewBag.Title.</h2>
<div class="container top-pos">
    <div class="row vertical-offset-100">
        <div class="col-md-4 col-md-offset-4">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">Please register</h3>
                </div>
                <div class="panel-body">
                    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">

                  
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">

                                <div class="col-md-offset-1 col-md-10">
                                    @Html.EditorFor(model => model.name, new
                               {
                                   htmlAttributes = new
                                   {
                                       @class = "form-control",
                                       placeholder = @Html.DisplayNameFor(m => m.name)
                                   }
                               })
                                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">

                                <div class="col-md-offset-1 col-md-10">
                                    @Html.EditorFor(model => model.surname, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.surname) } })
                                    @Html.ValidationMessageFor(model => model.surname, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">

                                <div class="col-md-offset-1 col-md-10">
                                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.email) } })
                                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">

                                <div class="col-md-offset-1 col-md-10">
                                    @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.password) } })
                                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">

                                <div class="col-md-offset-1 col-md-10">
                                    @Html.EditorFor(model => model.repeatpassword, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.repeatpassword) } })
                                    @Html.ValidationMessageFor(model => model.repeatpassword, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-1 col-md-10">
                                    <input type="submit" value="Register" class="btn btn-lg btn-success btn-block btn-col" />
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
