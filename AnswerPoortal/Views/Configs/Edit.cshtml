@model AnswerPoortal.Models.Config

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Config</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)
       
        <div class="form-group">

                @Html.LabelFor(model => model.answerPriceK, htmlAttributes: new { @class = "control-label col-md-2" })
                
               
                <div class="col-md-8">

                    @Html.EditorFor(model => model.answerPriceK, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.answerPriceK, "", new { @class = "text-danger" })
                </div>
</div>

        <div class="form-group">
            @Html.LabelFor(model => model.unlockPriceM, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.unlockPriceM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.unlockPriceM, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.evaluationPriceE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.evaluationPriceE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.evaluationPriceE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.silverPriceS, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.silverPriceS, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.silverPriceS, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.goldPriceG, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.goldPriceG, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.goldPriceG, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.platinumPriceP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.platinumPriceP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.platinumPriceP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
